class Solution {
public:
    
    int costing(vector<int>& cost,int n,vector<int> &dp){
        if(n == 0){
            return cost[0] ;
        }
        else if(n == 1){
            return cost[1];
        }
        if(dp[n] != -1){
            return dp[n];
        }
        else{
            dp[n] = min(costing(cost,n-1,dp),costing(cost,n-2,dp)) + cost[n];
            return dp[n];
        }
    }
    
    int minCostClimbingStairs(vector<int>& cost) {
        int n = cost.size();
        vector<int> dp(n+1,-1);
        int a = min(costing(cost,n-1,dp),costing(cost,n-2,dp));
        return a;
    }
};